{"ast":null,"code":"var _jsxFileName = \"/Users/alexhoang/ReactProjects/CostPerMile/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Toast from 'react-bootstrap/Toast';\nimport Container from 'react-bootstrap/Container';\nimport { Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      costpermile: 0,\n      iPaid: \"\",\n      gPaid: \"\",\n      miles: \"\",\n      mait: \"\",\n      originalPrice: \"\",\n      finalPrice: \"\",\n      tolls: \"\",\n      statecode: \"\",\n      mpg: \"\",\n      subscriptions: \"\",\n      gallon: \"\",\n      typeOfGas: \"gasoline\",\n      priceOfGas: \"\",\n      city: \"\",\n      carType: \"Small Sedan\",\n      depreciationValue: \"\",\n      fullcharge: \"\",\n      fullchargeCost: \"\",\n      zipcode: \"\",\n      isElectric: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCarMake = this.handleCarMake.bind(this);\n  }\n  /*\n   <option name=\"carType\">Small Sedan</option>\n                                  <option name=\"carType\">Medium Sedan</option>\n                                  <option name=\"carType\">Large Sedan</option>\n                                  <option name=\"carType\">Small SUV (FWD)</option>\n                                  <option name=\"carType\">Medium SUV (4WD)</option>\n                                  <option name=\"carType\">Minivan</option>\n                                  <option name=\"carType\">Hybrid Vehicle</option>\n                                  <option name=\"carType\">Electric Vehicle</option>\n  */\n\n\n  depreciate(cartype) {\n    let depreciation;\n\n    if (cartype === \"Small Sedan\") {\n      depreciation = 2240 * (this.statemiles / 15000);\n    } else if (cartype === \"Medium Sedan\") {\n      depreciation = 3169 * (this.state.miles / 15000);\n    } else if (cartype === \"Large Sedan\") {\n      depreciation = 4061 * (this.state.miles / 15000);\n    } else if (cartype === \"Small SUV (FWD)\") {\n      depreciation = 3132 * (this.state.miles / 15000);\n    } else if (cartype === \"Medium SUV (4WD)\") {\n      depreciation = 3794 * (this.state.miles / 15000);\n    } else if (cartype === \"Minivan\") {\n      depreciation = 4036 * (this.state.miles / 15000);\n    } else if (cartype === \"Hybrid Vehicle\") {\n      depreciation = 3087 * (this.state.miles / 15000);\n    } else if (cartype === \"Electric Vehicle\") {\n      depreciation = 5250 * (this.state.miles / 15000);\n    }\n\n    this.setState({\n      depreciationValue: depreciation\n    });\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state);\n  }\n\n  handleClick(e) {\n    this.getZIP(this.state.zipcode);\n    console.log(this.state);\n  }\n\n  handleCarMake() {\n    fetch('https://vpic.nhtsa.dot.gov/api/vehicles/getmodelsformake/' + this.state.carMake + '?format=json').then(response => response.json()).then(data => {\n      this.setState({\n        api: data[\"Results\"]\n      });\n      console.log(this.state.api);\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.depreciate(this.state.carType); //this.getZIP(this.state.zipcode);\n    //wait\n\n    this.getData(this.state.statecode);\n    let final;\n\n    if (this.state.mpg.length > 0) {\n      final = (parseInt(this.state.depreciationValue) + parseInt(this.state.iPaid) + this.state.miles * 52 / this.state.mpg * this.state.gallon + parseInt(this.state.mait) + parseInt(this.state.tolls) * 12 + parseInt(this.state.subscriptions)) / (parseInt(this.state.miles) * 52);\n    } else {\n      final = (parseInt(this.state.depreciationValue) + parseInt(this.state.iPaid) + parseInt(this.state.miles) / parseInt(this.state.fullcharge) * this.state.fullChargeCost + parseInt(this.state.mait) + parseInt(this.state.tolls) * 12 + parseInt(this.state.subscriptions)) / (parseInt(this.state.miles) * 52);\n    }\n\n    this.setState({\n      costpermile: final\n    });\n  }\n\n  getZIP(zip) {\n    const http = require(\"https\");\n\n    const options = {\n      \"method\": \"GET\",\n      \"hostname\": \"redline-redline-zipcode.p.rapidapi.com\",\n      \"port\": null,\n      \"path\": \"/rest/info.json/\" + this.state.zipcode + \"/degrees\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"73d45d6313mshd16f17ab16d3fe8p1368ecjsn7f132604eddb\",\n        \"x-rapidapi-host\": \"redline-redline-zipcode.p.rapidapi.com\",\n        \"useQueryString\": true\n      }\n    };\n    var self = this;\n    const req = http.request(options, function (res) {\n      const chunks = [];\n      res.on(\"data\", function (chunk) {\n        chunks.push(chunk);\n      });\n      res.on(\"end\", function () {\n        const body = Buffer.concat(chunks);\n        var bodyJSON = JSON.parse(body.toString());\n        console.log(bodyJSON);\n        self.setState({\n          statecode: bodyJSON.state,\n          city: bodyJSON.city\n        });\n      });\n    });\n    req.end();\n  }\n\n  renderIsElectric() {\n    /*console.log(this.state);\n    if(this.state.isElectric.length===0){\n        return (<div>hey</div>);\n    }\n    else if(this.state.isElectric === \"gasoline\"){\n    return  (<div><Form.Group> \n                <Form.Label>\n                    What gas do you use?\n                </Form.Label>\n                 <Form.Control as= \"select\"\n                onChange={this.handleChange}                                    \n                id = \"typeOfGas\"\n                type = \"text\" \n                name = \"typeOfGas\"\n                value = {this.state.typeOfGas}\n                >\n                <option name=\"typeOfGas\"> gasoline</option>\n                <option name=\"typeOfGas\">midGrade</option>\n                <option name=\"typeOfGas\"> premium</option>\n                <option name=\"typeOfGas\"> diesel</option>\n            </Form.Control>\n            <Form.Text>\n                Do not answer this question if you are an electric vehicle user\n            </Form.Text>\n        </Form.Group>\n     \n        <Form.Group>\n            <Form.Label>\n                What is your MPG(Miles Per Gallon)?\n            </Form.Label>\n    \n            <Form.Control\n            placeholder = \"mpg\"\n            onChange={this.handleChange}                                    \n            id = \"mpg\"\n            type = \"number\" \n            name = \"mpg\"\n            value = {this.state.mpg}\n            />\n            <Form.Text>\n                Do not answer this question if you are an electric vehicle user\n             </Form.Text>\n        </Form.Group>\n        </div>\n    }else{\n        <div>\n            <Form.Group>\n                        <Form.Label>\n                            If you drive an electric vehicle, how far can you drive on a full charge in miles?\n                        </Form.Label>\n            \n        </div>)\n    }*/\n    return \"hello\";\n  }\n\n  getData(state) {\n    var http = require(\"https\");\n\n    var options = {\n      \"method\": \"GET\",\n      \"hostname\": \"api.collectapi.com\",\n      \"port\": null,\n      \"path\": \"/gasPrice/stateUsaPrice?state=\" + state.toUpperCase(),\n      \"headers\": {\n        \"content-type\": \"application/json\",\n        \"authorization\": \"apikey 6jwMhjlXWz2rcXdhdpLjz6:4X6MQAYjbRiFWwNAxcc5k1\"\n      }\n    };\n    var self = this;\n    var req = http.request(options, function (res) {\n      var chunks = [];\n      res.on(\"data\", function (chunk) {\n        chunks.push(chunk);\n      });\n      res.on(\"end\", function () {\n        var body = Buffer.concat(chunks);\n        var bodyJSON = JSON.parse(body.toString());\n        console.log(bodyJSON);\n        console.log(self.state.typeOfGas);\n        var city = bodyJSON.result.cities.filter(x => x.name.toLowerCase() === self.state.city.toLowerCase());\n\n        if (city.length > 0) {\n          console.log(city[0][self.state.typeOfGas]);\n          self.setState({\n            gallon: city[0][self.state.typeOfGas]\n          });\n        }\n      });\n    });\n    req.end();\n  }\n\n  render() {\n    if (this.state.isElectric.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Cost Per Mile Calculator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Fill out these questions to the best of your abilitiy as they are the basis of calculating your cost per mile. You will be asked about information that you may not know about some of these questions so fill them out to the best of your ability.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"How many miles do you usually drive per week?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"miles driven\",\n                onChange: this.handleChange,\n                id: \"miles\",\n                type: \"number\",\n                name: \"miles\",\n                value: this.state.miles\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"Enter the miles you usually drive per week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"How much have you paid for insurance a year?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"insurance per year\",\n                onChange: this.handleChange,\n                id: \"insurance\",\n                type: \"number\",\n                name: \"iPaid\",\n                value: this.state.iPaid\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"Enter how much insurace you pay each year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"How much have you paid for maitenance a year?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"maitenance a year\",\n                onChange: this.handleChange,\n                id: \"maitenance\",\n                type: \"number\",\n                name: \"mait\",\n                value: this.state.mait\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"Enter how much you usually pay for maitenance in a year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"How much do you pay for tolls every month?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"tolls\",\n                onChange: this.handleChange,\n                id: \"tolls\",\n                type: \"number\",\n                name: \"tolls\",\n                value: this.state.tolls\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"Enter how much you usually pay for tolls every month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Are you an electric vehicle user or gas car user?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                onChange: this.handleChange,\n                id: \"isElectric\",\n                type: \"text\",\n                name: \"isElectric\",\n                value: this.state.isElectric,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"isElectric\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"isElectric\",\n                  children: \"gasoline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"isElectric\",\n                  children: \"electric\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [this.renderIsElectric, \" hi\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"What is your zip code?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"zip code\",\n                onChange: this.handleChange,\n                id: \"zipcode\",\n                type: \"number\",\n                name: \"zipcode\",\n                value: this.state.zipcode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: this.handleClick,\n              children: \"submit your zipcode!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: this.state.city.length > 0 ? \"Your city, state is \" + this.state.city + \", \" + this.state.statecode : \"Enter the question above and submit your zip code to move on\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"How much do you pay for other related car costs per year?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"Other car costs\",\n                onChange: this.handleChange,\n                id: \"subscriptions\",\n                type: \"number\",\n                name: \"subscriptions\",\n                value: this.state.subscriptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"What type of car do you use\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                onChange: this.handleChange,\n                id: \"carType\",\n                type: \"text\",\n                name: \"carType\",\n                value: this.state.carType,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"carType\",\n                  children: \"Small Sedan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 38\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"carType\",\n                  children: \"Medium Sedan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"carType\",\n                  children: \"Large Sedan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"carType\",\n                  children: \"Small SUV (FWD)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"carType\",\n                  children: \"Medium SUV (4WD)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"carType\",\n                  children: \"Minivan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"carType\",\n                  children: \"Hybrid Vehicle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"carType\",\n                  children: \"Electric Vehicle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                children: \"This calculates your depreciation value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Cost per mile: $ \", this.state.costpermile.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }, this);\n    } else if (this.state.isElectric === \"electric\") {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Cost Per Mile Calculator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Fill out these questions to the best of your abilitiy as they are the basis of calculating your cost per mile. You will be asked about information that you may not know about some of these questions so fill them out to the best of your ability.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"How many miles do you usually drive per week?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"miles driven\",\n                onChange: this.handleChange,\n                id: \"miles\",\n                type: \"number\",\n                name: \"miles\",\n                value: this.state.miles\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"Enter the miles you usually drive per week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"How much have you paid for insurance a year?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"insurance per year\",\n                onChange: this.handleChange,\n                id: \"insurance\",\n                type: \"number\",\n                name: \"iPaid\",\n                value: this.state.iPaid\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"Enter how much insurace you pay each year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"How much have you paid for maitenance a year?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"maitenance a year\",\n                onChange: this.handleChange,\n                id: \"maitenance\",\n                type: \"number\",\n                name: \"mait\",\n                value: this.state.mait\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"Enter how much you usually pay for maitenance in a year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"How much do you pay for tolls every month?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"tolls\",\n                onChange: this.handleChange,\n                id: \"tolls\",\n                type: \"number\",\n                name: \"tolls\",\n                value: this.state.tolls\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"Enter how much you usually pay for tolls every month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Are you an electric vehicle user or gas car user?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                onChange: this.handleChange,\n                id: \"isElectric\",\n                type: \"text\",\n                name: \"isElectric\",\n                value: this.state.isElectric,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"isElectric\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"isElectric\",\n                  children: \"gasoline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"isElectric\",\n                  children: \"electric\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [this.renderIsElectric, \" hi\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"What is your zip code?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"zip code\",\n                onChange: this.handleChange,\n                id: \"zipcode\",\n                type: \"number\",\n                name: \"zipcode\",\n                value: this.state.zipcode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: this.handleClick,\n              children: \"submit your zipcode!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: this.state.city.length > 0 ? \"Your city, state is \" + this.state.city + \", \" + this.state.statecode : \"Enter the question above and submit your zip code to move on\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"How much do you pay for other related car costs per year?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"Other car costs\",\n                onChange: this.handleChange,\n                id: \"subscriptions\",\n                type: \"number\",\n                name: \"subscriptions\",\n                value: this.state.subscriptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"What type of car do you use\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                onChange: this.handleChange,\n                id: \"carType\",\n                type: \"text\",\n                name: \"carType\",\n                value: this.state.carType,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"carType\",\n                  children: \"Small Sedan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 752,\n                  columnNumber: 34\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"carType\",\n                  children: \"Medium Sedan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 753,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"carType\",\n                  children: \"Large Sedan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 754,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"carType\",\n                  children: \"Small SUV (FWD)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 755,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"carType\",\n                  children: \"Medium SUV (4WD)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 756,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"carType\",\n                  children: \"Minivan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 757,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"carType\",\n                  children: \"Hybrid Vehicle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"carType\",\n                  children: \"Electric Vehicle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                children: \"This calculates your depreciation value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Cost per mile: $ \", this.state.costpermile.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Calculator, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 786,\n  columnNumber: 5\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/alexhoang/ReactProjects/CostPerMile/src/index.js"],"names":["React","ReactDOM","Button","Jumbotron","Toast","Container","Form","Calculator","Component","constructor","props","state","costpermile","iPaid","gPaid","miles","mait","originalPrice","finalPrice","tolls","statecode","mpg","subscriptions","gallon","typeOfGas","priceOfGas","city","carType","depreciationValue","fullcharge","fullchargeCost","zipcode","isElectric","handleChange","bind","handleSubmit","handleClick","handleCarMake","depreciate","cartype","depreciation","statemiles","setState","event","name","value","target","console","log","e","getZIP","fetch","carMake","then","response","json","data","api","preventDefault","getData","final","length","parseInt","fullChargeCost","zip","http","require","options","self","req","request","res","chunks","on","chunk","push","body","Buffer","concat","bodyJSON","JSON","parse","toString","end","renderIsElectric","toUpperCase","result","cities","filter","x","toLowerCase","render","toFixed","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Toast from 'react-bootstrap/Toast';\nimport Container from 'react-bootstrap/Container';\nimport { Form } from 'react-bootstrap';\n\nclass Calculator extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            costpermile:0,\n            iPaid:\"\",\n            gPaid:\"\",\n            miles:\"\",\n            mait:\"\",\n            originalPrice:\"\",\n            finalPrice:\"\",\n            tolls: \"\",\n            statecode: \"\",\n            mpg:\"\",\n            subscriptions: \"\",\n            gallon: \"\",\n            typeOfGas: \"gasoline\",\n            priceOfGas: \"\",\n            city: \"\",\n            carType: \"Small Sedan\",\n            depreciationValue: \"\",\n            fullcharge: \"\",\n            fullchargeCost: \"\",\n            zipcode: \"\",\n            isElectric: \"\",\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleCarMake = this.handleCarMake.bind(this);\n        \n    }\n    /*\n     <option name=\"carType\">Small Sedan</option>\n                                    <option name=\"carType\">Medium Sedan</option>\n                                    <option name=\"carType\">Large Sedan</option>\n                                    <option name=\"carType\">Small SUV (FWD)</option>\n                                    <option name=\"carType\">Medium SUV (4WD)</option>\n                                    <option name=\"carType\">Minivan</option>\n                                    <option name=\"carType\">Hybrid Vehicle</option>\n                                    <option name=\"carType\">Electric Vehicle</option>\n    */\n    depreciate(cartype){\n        let depreciation\n        if(cartype === \"Small Sedan\"){\n            depreciation = 2240 * (this.statemiles/15000)\n        }\n        else if(cartype ===\"Medium Sedan\"){\n            depreciation = 3169 * (this.state.miles/15000)\n        }\n        else if(cartype ===\"Large Sedan\"){\n            depreciation = 4061 * (this.state.miles/15000)\n        }\n        else if(cartype ===\"Small SUV (FWD)\"){\n            depreciation = 3132 * (this.state.miles/15000)\n        }\n        else if(cartype ===\"Medium SUV (4WD)\"){\n            depreciation = 3794 * (this.state.miles/15000)\n        }\n        else if(cartype ===\"Minivan\"){\n            depreciation = 4036 * (this.state.miles/15000)\n        }\n        else if(cartype ===\"Hybrid Vehicle\"){\n            depreciation = 3087 * (this.state.miles/15000)\n        }\n        else if(cartype ===\"Electric Vehicle\"){\n            depreciation = 5250 * (this.state.miles/15000)\n        }\n        this.setState({\n            depreciationValue: depreciation,\n        })\n    }\n    handleChange(event) {\n        const {name,value} = event.target\n        this.setState({\n            [name]: value,\n        });\n        \n        console.log(this.state);\n    }\n    handleClick(e){\n        this.getZIP(this.state.zipcode);\n        console.log(this.state);\n    }\n    handleCarMake(){\n        fetch('https://vpic.nhtsa.dot.gov/api/vehicles/getmodelsformake/' + this.state.carMake + '?format=json')\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n        this.setState({api: data[\"Results\"] })\n        \n        console.log(this.state.api);\n\t\t})\n\t\t\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        this.depreciate(this.state.carType);\n        //this.getZIP(this.state.zipcode);\n\n        //wait\n        \n        this.getData(this.state.statecode);\n        \n        let final;\n         \n        if(this.state.mpg.length> 0){\n            final = (parseInt(this.state.depreciationValue) + \n            parseInt(this.state.iPaid) + \n            (((this.state.miles * 52)/ this.state.mpg) * this.state.gallon) + \n            parseInt(this.state.mait) + \n            (parseInt(this.state.tolls) * 12) + \n            parseInt(this.state.subscriptions))\n            /(parseInt(this.state.miles) * 52);\n        }else{\n            final = (parseInt(this.state.depreciationValue) + \n                parseInt(this.state.iPaid) + \n                ((parseInt(this.state.miles)/parseInt(this.state.fullcharge)) * this.state.fullChargeCost) + \n                parseInt(this.state.mait) + \n                (parseInt(this.state.tolls) * 12) + \n                parseInt(this.state.subscriptions))/\n                (parseInt(this.state.miles) * 52);\n\n        }\n\n        this.setState(\n            {costpermile: final\n        })\n    }\n    getZIP(zip){\n        const http = require(\"https\");\n\n        const options = {\n            \"method\": \"GET\",\n            \"hostname\": \"redline-redline-zipcode.p.rapidapi.com\",\n            \"port\": null,\n            \"path\": \"/rest/info.json/\" + this.state.zipcode + \"/degrees\",\n            \"headers\": {\n                \"x-rapidapi-key\": \"73d45d6313mshd16f17ab16d3fe8p1368ecjsn7f132604eddb\",\n                \"x-rapidapi-host\": \"redline-redline-zipcode.p.rapidapi.com\",\n                \"useQueryString\": true\n            }\n        };\n        var self = this;\n        const req = http.request(options, function (res) {\n            const chunks = [];\n\n            res.on(\"data\", function (chunk) {\n                chunks.push(chunk);\n            });\n\n            res.on(\"end\", function () {\n                const body = Buffer.concat(chunks);\n                \n                var bodyJSON = JSON.parse(body.toString());\n                console.log(bodyJSON);\n                self.setState({\n                    statecode: bodyJSON.state,\n                    city: bodyJSON.city,\n                })\n            });\n        });\n\n        req.end();\n    }\n    \n    renderIsElectric() {\n        /*console.log(this.state);\n        if(this.state.isElectric.length===0){\n            return (<div>hey</div>);\n        }\n        else if(this.state.isElectric === \"gasoline\"){\n        return  (<div><Form.Group> \n                    <Form.Label>\n                        What gas do you use?\n                    </Form.Label>\n\n                    <Form.Control as= \"select\"\n                    onChange={this.handleChange}                                    \n                    id = \"typeOfGas\"\n                    type = \"text\" \n                    name = \"typeOfGas\"\n                    value = {this.state.typeOfGas}\n                    >\n                    <option name=\"typeOfGas\"> gasoline</option>\n                    <option name=\"typeOfGas\">midGrade</option>\n                    <option name=\"typeOfGas\"> premium</option>\n                    <option name=\"typeOfGas\"> diesel</option>\n                </Form.Control>\n                <Form.Text>\n                    Do not answer this question if you are an electric vehicle user\n                </Form.Text>\n            </Form.Group>\n    \n    \n            <Form.Group>\n                <Form.Label>\n                    What is your MPG(Miles Per Gallon)?\n                </Form.Label>\n        \n                <Form.Control\n                placeholder = \"mpg\"\n                onChange={this.handleChange}                                    \n                id = \"mpg\"\n                type = \"number\" \n                name = \"mpg\"\n                value = {this.state.mpg}\n                />\n                <Form.Text>\n                    Do not answer this question if you are an electric vehicle user\n                 </Form.Text>\n            </Form.Group>\n            </div>\n        }else{\n            <div>\n                <Form.Group>\n                            <Form.Label>\n                                If you drive an electric vehicle, how far can you drive on a full charge in miles?\n                            </Form.Label>\n                \n            </div>)\n        }*/\n        return (\n            \"hello\"\n        )\n    }\n\n    getData(state){\n\n        \n        var http = require(\"https\");\n\n        var options = {\n          \"method\": \"GET\",\n          \"hostname\": \"api.collectapi.com\",\n          \"port\": null,\n          \"path\": \"/gasPrice/stateUsaPrice?state=\" + state.toUpperCase(),\n          \"headers\": {\n            \"content-type\": \"application/json\",\n            \"authorization\": \"apikey 6jwMhjlXWz2rcXdhdpLjz6:4X6MQAYjbRiFWwNAxcc5k1\"\n          }\n        };\n        var self = this;\n        var req = http.request(options, function (res) {\n          var chunks = [];\n        \n          res.on(\"data\", function (chunk) {\n            chunks.push(chunk);\n          });\n        \n          res.on(\"end\", function () {\n            var body = Buffer.concat(chunks);\n            var bodyJSON = JSON.parse(body.toString());\n            console.log(bodyJSON);\n            console.log(self.state.typeOfGas);\n            var city = bodyJSON.result.cities.filter((x) =>x.name.toLowerCase() === self.state.city.toLowerCase());\n            if(city.length>0){\n                console.log(city[0][self.state.typeOfGas]);\n                self.setState({\n                    gallon: city[0][self.state.typeOfGas]\n                })\n            }\n            \n          });\n        });\n        \n        req.end();\n        \n\n    }\n    render(){\n       if(this.state.isElectric.length ===0){\n        return(\n            <Container>\n                \n                <Jumbotron>\n                    <h1>\n                    Cost Per Mile Calculator\n                    \n                    </h1>\n                    <p>\n                        Fill out these questions to the best of your abilitiy as they are the basis of calculating your cost per mile. You will be asked about information that you may not know about some of these questions so fill them out to the best of your ability.\n                    </p>\n                </Jumbotron>\n                <Jumbotron>\n             \n                    \n                    <Form onSubmit = {this.handleSubmit}>\n                                <Form.Group>\n                                    \n                                    <Form.Label>\n                                        How many miles do you usually drive per week?\n                                    </Form.Label>\n\n                                    <Form.Control type=\"number\"\n                                    placeholder = \"miles driven\"\n                                    onChange={this.handleChange}\n                                    id = \"miles\"\n                                    type = \"number\" \n                                    name = \"miles\"\n                                    value = {this.state.miles}  \n                                    />\n                                    <Form.Text className=\"text-muted\">\n                                        Enter the miles you usually drive per week\n                                    </Form.Text>\n\n\n                                </Form.Group>\n\n\n\n                                <Form.Group> \n                                    \n                                        <Form.Label>\n                                            How much have you paid for insurance a year?\n                                        </Form.Label>\n                                                                  \n                                   \n                                        <Form.Control\n                                        placeholder = \"insurance per year\"\n                                        onChange={this.handleChange}                                    \n                                        id = \"insurance\"\n                                        type = \"number\" \n                                        name = \"iPaid\"\n                                        value = {this.state.iPaid}\n                                        />\n                                <Form.Text className = \"text-muted\">\n                                    Enter how much insurace you pay each year\n                                </Form.Text>\n                                </Form.Group>\n                               \n                                \n\n                                <Form.Group> \n                                    \n                                        <Form.Label>\n                                          How much have you paid for maitenance a year?\n                                        </Form.Label>\n                                                                  \n                                    \n                                        <Form.Control\n                                            placeholder = \"maitenance a year\"\n                                            onChange={this.handleChange}                                    \n                                            id = \"maitenance\"\n                                            type = \"number\" \n                                            name = \"mait\"\n                                            value = {this.state.mait}\n                                        />\n                                        <Form.Text className=\"text-muted\">\n                                            Enter how much you usually pay for maitenance in a year\n                                        </Form.Text>\n                                </Form.Group>\n\n\n                                <Form.Group> \n                                        <Form.Label>\n                                            How much do you pay for tolls every month?\n                                        </Form.Label>\n                                                         \n                         \n                                    <Form.Control\n                                        placeholder = \"tolls\"\n                                        onChange={this.handleChange}                                    \n                                        id = \"tolls\"\n                                        type = \"number\" \n                                        name = \"tolls\"\n                                        value = {this.state.tolls}\n                                    />\n                                    <Form.Text className=\"text-muted\">\n                                        Enter how much you usually pay for tolls every month\n                                    </Form.Text>\n                                </Form.Group>\n\n\n\n                       \n\n\n                                <Form.Group> \n                                    \n                                    <Form.Label>\n                                        Are you an electric vehicle user or gas car user?\n                                    </Form.Label>\n                                                            \n                                \n                                <Form.Control as= \"select\"\n                                    \n                                    onChange={this.handleChange}                                    \n                                    id = \"isElectric\"\n                                    type = \"text\" \n                                    name = \"isElectric\"\n                                    value = {this.state.isElectric}\n                                >   \n                                    <option name = \"isElectric\"></option>\n                                    <option name=\"isElectric\">gasoline</option>\n                                    <option name=\"isElectric\">electric</option>\n                                    \n                                </Form.Control>\n                                </Form.Group>\n                                \n                                <h1>\n                                    {this.renderIsElectric} hi\n                                </h1>\n                            \n\n                            \n\n                            \n                             \n                            \n                            <Form.Group>\n                                        <Form.Label>\n                                            What is your zip code?\n                                        </Form.Label>\n                                    \n                                    <Form.Control\n                                        placeholder = \"zip code\"\n                                        onChange={this.handleChange}                                    \n                                        id = \"zipcode\"\n                                        type = \"number\" \n                                        name = \"zipcode\"\n                                        value = {this.state.zipcode}\n                                    />\n                                   \n                            </Form.Group>\n\n                            <Button\n                            variant = \"primary\"\n                            onClick = {this.handleClick}\n                            >\n                                submit your zipcode!\n                            </Button>\n                            <br/>\n\n                            \n                            <label>\n                                {this.state.city.length>0? \"Your city, state is \" + this.state.city + \", \" + this.state.statecode :\"Enter the question above and submit your zip code to move on\"}\n                            </label>\n                           \n                            <br/>\n                            <br/>\n\n                                <Form.Group>\n                                        <Form.Label>\n                                            How much do you pay for other related car costs per year?\n                                        </Form.Label>\n                                    <Form.Control\n                                        placeholder = \"Other car costs\"\n                                        onChange={this.handleChange}                                    \n                                        id = \"subscriptions\"\n                                        type = \"number\" \n                                        name = \"subscriptions\"\n                                        value = {this.state.subscriptions}\n                                    />\n                                    \n                            \n                            </Form.Group>\n\n\n                            <Form.Group> \n                                    \n                                    <Form.Label>\n                                        What type of car do you use\n                                    </Form.Label>\n                                                            \n                                \n                                <Form.Control as= \"select\"\n                                    onChange={this.handleChange}                                    \n                                    id = \"carType\"\n                                    type = \"text\" \n                                    name = \"carType\"\n                                    value = {this.state.carType}\n                                >\n                                     <option name=\"carType\">Small Sedan</option>\n                                    <option name=\"carType\">Medium Sedan</option>\n                                    <option name=\"carType\">Large Sedan</option>\n                                    <option name=\"carType\">Small SUV (FWD)</option>\n                                    <option name=\"carType\">Medium SUV (4WD)</option>\n                                    <option name=\"carType\">Minivan</option>\n                                    <option name=\"carType\">Hybrid Vehicle</option>\n                                    <option name=\"carType\">Electric Vehicle</option>\n                                </Form.Control>\n                                <Form.Text>\n                                    This calculates your depreciation value\n                                </Form.Text>\n                             </Form.Group>\n\n\n\n                           {/*  <Form.Group> \n                                    \n                                    <Form.Label>\n                                        What is your car make\n                                    </Form.Label>\n                                                            \n                                \n                                <Form.Control\n                                    onChange={this.handleChange}                                    \n                                    id = \"carMake\"\n                                    placeholder = \"carMake\"\n                                    type = \"text\" \n                                    name = \"carMake\"\n                                    value = {this.state.carMake}\n                                />\n                                     \n                                <Form.Text>\n                                    This calculates your depreciation value\n                                </Form.Text>\n                                <Button\n                                type = \"primary\"\n                                onClick = {this.handleCarMake}   \n                                >\n                                    Enter your car make\n                                </Button>\n                             </Form.Group>\n                            <br/>\n           \n                            <br/>\n                           */}\n                               \n\n                                \n\n\n                                <input type = \"submit\" \n                                                                />\n                            </Form>\n                        \n                    <br/>\n\n                    <h2>\n                        Cost per mile: $ { this.state.costpermile.toFixed(2) }\n                    </h2>\n                    \n                </Jumbotron>\n            </Container>\n            \n        );\n    }\n    else if(this.state.isElectric === \"electric\"){\n        return (\n            <Container>\n                \n            <Jumbotron>\n                <h1>\n                Cost Per Mile Calculator\n                \n                </h1>\n                <p>\n                    Fill out these questions to the best of your abilitiy as they are the basis of calculating your cost per mile. You will be asked about information that you may not know about some of these questions so fill them out to the best of your ability.\n                </p>\n            </Jumbotron>\n            <Jumbotron>\n         \n                \n                <Form onSubmit = {this.handleSubmit}>\n                            <Form.Group>\n                                \n                                <Form.Label>\n                                    How many miles do you usually drive per week?\n                                </Form.Label>\n\n                                <Form.Control type=\"number\"\n                                placeholder = \"miles driven\"\n                                onChange={this.handleChange}\n                                id = \"miles\"\n                                type = \"number\" \n                                name = \"miles\"\n                                value = {this.state.miles}  \n                                />\n                                <Form.Text className=\"text-muted\">\n                                    Enter the miles you usually drive per week\n                                </Form.Text>\n\n\n                            </Form.Group>\n\n\n\n                            <Form.Group> \n                                \n                                    <Form.Label>\n                                        How much have you paid for insurance a year?\n                                    </Form.Label>\n                                                              \n                               \n                                    <Form.Control\n                                    placeholder = \"insurance per year\"\n                                    onChange={this.handleChange}                                    \n                                    id = \"insurance\"\n                                    type = \"number\" \n                                    name = \"iPaid\"\n                                    value = {this.state.iPaid}\n                                    />\n                            <Form.Text className = \"text-muted\">\n                                Enter how much insurace you pay each year\n                            </Form.Text>\n                            </Form.Group>\n                           \n                            \n\n                            <Form.Group> \n                                \n                                    <Form.Label>\n                                      How much have you paid for maitenance a year?\n                                    </Form.Label>\n                                                              \n                                \n                                    <Form.Control\n                                        placeholder = \"maitenance a year\"\n                                        onChange={this.handleChange}                                    \n                                        id = \"maitenance\"\n                                        type = \"number\" \n                                        name = \"mait\"\n                                        value = {this.state.mait}\n                                    />\n                                    <Form.Text className=\"text-muted\">\n                                        Enter how much you usually pay for maitenance in a year\n                                    </Form.Text>\n                            </Form.Group>\n\n\n                            <Form.Group> \n                                    <Form.Label>\n                                        How much do you pay for tolls every month?\n                                    </Form.Label>\n                                                     \n                     \n                                <Form.Control\n                                    placeholder = \"tolls\"\n                                    onChange={this.handleChange}                                    \n                                    id = \"tolls\"\n                                    type = \"number\" \n                                    name = \"tolls\"\n                                    value = {this.state.tolls}\n                                />\n                                <Form.Text className=\"text-muted\">\n                                    Enter how much you usually pay for tolls every month\n                                </Form.Text>\n                            </Form.Group>\n\n\n\n                   \n\n\n                            <Form.Group> \n                                \n                                <Form.Label>\n                                    Are you an electric vehicle user or gas car user?\n                                </Form.Label>\n                                                        \n                            \n                            <Form.Control as= \"select\"\n                                \n                                onChange={this.handleChange}                                    \n                                id = \"isElectric\"\n                                type = \"text\" \n                                name = \"isElectric\"\n                                value = {this.state.isElectric}\n                            >   \n                                <option name = \"isElectric\"></option>\n                                <option name=\"isElectric\">gasoline</option>\n                                <option name=\"isElectric\">electric</option>\n                                \n                            </Form.Control>\n                            </Form.Group>\n                            \n                            <h1>\n                                {this.renderIsElectric} hi\n                            </h1>\n                        \n\n                        \n\n                        \n                         \n                        \n                        <Form.Group>\n                                    <Form.Label>\n                                        What is your zip code?\n                                    </Form.Label>\n                                \n                                <Form.Control\n                                    placeholder = \"zip code\"\n                                    onChange={this.handleChange}                                    \n                                    id = \"zipcode\"\n                                    type = \"number\" \n                                    name = \"zipcode\"\n                                    value = {this.state.zipcode}\n                                />\n                               \n                        </Form.Group>\n\n                        <Button\n                        variant = \"primary\"\n                        onClick = {this.handleClick}\n                        >\n                            submit your zipcode!\n                        </Button>\n                        <br/>\n\n                        \n                        <label>\n                            {this.state.city.length>0? \"Your city, state is \" + this.state.city + \", \" + this.state.statecode :\"Enter the question above and submit your zip code to move on\"}\n                        </label>\n                       \n                        <br/>\n                        <br/>\n\n                            <Form.Group>\n                                    <Form.Label>\n                                        How much do you pay for other related car costs per year?\n                                    </Form.Label>\n                                <Form.Control\n                                    placeholder = \"Other car costs\"\n                                    onChange={this.handleChange}                                    \n                                    id = \"subscriptions\"\n                                    type = \"number\" \n                                    name = \"subscriptions\"\n                                    value = {this.state.subscriptions}\n                                />\n                                \n                        \n                        </Form.Group>\n\n\n                        <Form.Group> \n                                \n                                <Form.Label>\n                                    What type of car do you use\n                                </Form.Label>\n                                                        \n                            \n                            <Form.Control as= \"select\"\n                                onChange={this.handleChange}                                    \n                                id = \"carType\"\n                                type = \"text\" \n                                name = \"carType\"\n                                value = {this.state.carType}\n                            >\n                                 <option name=\"carType\">Small Sedan</option>\n                                <option name=\"carType\">Medium Sedan</option>\n                                <option name=\"carType\">Large Sedan</option>\n                                <option name=\"carType\">Small SUV (FWD)</option>\n                                <option name=\"carType\">Medium SUV (4WD)</option>\n                                <option name=\"carType\">Minivan</option>\n                                <option name=\"carType\">Hybrid Vehicle</option>\n                                <option name=\"carType\">Electric Vehicle</option>\n                            </Form.Control>\n                            <Form.Text>\n                                This calculates your depreciation value\n                            </Form.Text>\n                         </Form.Group>\n                           \n\n                            <input type = \"submit\" \n                                                            />\n                        </Form>\n                    \n                <br/>\n\n                <h2>\n                    Cost per mile: $ { this.state.costpermile.toFixed(2) }\n                </h2>\n                \n            </Jumbotron>\n        </Container>\n        );\n    }\n}\n\n}\n\nReactDOM.render(\n    <Calculator />,\n    document.getElementById(\"root\")\n  );\n"]},"metadata":{},"sourceType":"module"}