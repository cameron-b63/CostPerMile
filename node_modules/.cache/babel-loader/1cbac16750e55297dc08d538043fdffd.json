{"ast":null,"code":"var _jsxFileName = \"/Users/alexhoang/ReactProjects/CostPerMile/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Toast from 'react-bootstrap/Toast';\nimport Container from 'react-bootstrap/Container';\nimport { Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      costpermile: 0,\n      iPaid: \"\",\n      gPaid: \"\",\n      miles: \"\",\n      mait: \"\",\n      api: [],\n      models: [],\n      originalPrice: \"\",\n      finalPrice: \"\",\n      tolls: \"\",\n      statecode: \"\",\n      mpg: \"\",\n      subscriptions: \"\",\n      gallon: \"\",\n      typeOfGas: \"gasoline\",\n      priceOfGas: \"\",\n      city: \"\",\n      carType: \"\",\n      depreciationValue: \"\",\n      fullcharge: \"\",\n      fullchargeCost: \"\",\n      zipcode: \"\",\n      carMake: \"\",\n      carModel: \"\",\n      isElectric: \"\",\n      carYear: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCarMake = this.handleCarMake.bind(this);\n  }\n  /*\n   <option name=\"carType\">Small Sedan</option>\n                                  <option name=\"carType\">Medium Sedan</option>\n                                  <option name=\"carType\">Large Sedan</option>\n                                  <option name=\"carType\">Small SUV (FWD)</option>\n                                  <option name=\"carType\">Medium SUV (4WD)</option>\n                                  <option name=\"carType\">Minivan</option>\n                                  <option name=\"carType\">Hybrid Vehicle</option>\n                                  <option name=\"carType\">Electric Vehicle</option>\n  */\n\n\n  depreciate(cartype) {\n    let depreciation;\n\n    if (cartype === \"Small Sedan\") {\n      depreciation = 2240 * (this.statemiles / 15000);\n    } else if (cartype === \"Medium Sedan\") {\n      depreciation = 3169 * (this.state.miles / 15000);\n    } else if (cartype === \"Large Sedan\") {\n      depreciation = 4061 * (this.state.miles / 15000);\n    } else if (cartype === \"Small SUV (FWD)\") {\n      depreciation = 3132 * (this.state.miles / 15000);\n    } else if (cartype === \"Medium SUV (4WD)\") {\n      depreciation = 3794 * (this.state.miles / 15000);\n    } else if (cartype === \"Minivan\") {\n      depreciation = 4036 * (this.state.miles / 15000);\n    } else if (cartype === \"Hybrid Vehicle\") {\n      depreciation = 3087 * (this.state.miles / 15000);\n    } else if (cartype === \"Electric Vehicle\") {\n      depreciation = 5250 * (this.state.miles / 15000);\n    }\n\n    this.setState({\n      depreciationValue: depreciation\n    });\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state);\n  }\n\n  handleClick(e) {\n    this.getZIP(this.state.zipcode);\n    console.log(this.state);\n  }\n\n  handleCarMake() {\n    fetch('https://vpic.nhtsa.dot.gov/api/vehicles/getallmakes?format=json').then(response => response.json()).then(data => {\n      this.setState({\n        api: data[\"Results\"]\n      });\n      console.log(data[\"Results\"]);\n      console.log(this.state.api);\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.depreciate(this.state.carType); //this.getZIP(this.state.zipcode);\n    //wait\n\n    this.getData(this.state.statecode);\n    let final;\n\n    if (this.state.mpg.length > 0) {\n      final = (\n      /*parseInt(this.state.depreciationValue) +*/\n      parseInt(this.state.iPaid) + this.state.miles * 52 / this.state.mpg * this.state.gallon + parseInt(this.state.mait) + parseInt(this.state.tolls) * 12 + parseInt(this.state.subscriptions)) / (parseInt(this.state.miles) * 52);\n    } else {\n      final = (parseInt(this.state.depreciationValue) + parseInt(this.state.iPaid) + parseInt(this.state.miles) / parseInt(this.state.fullcharge) * this.state.fullChargeCost + parseInt(this.state.mait) + parseInt(this.state.tolls) * 12 + parseInt(this.state.subscriptions)) / (parseInt(this.state.miles) * 52);\n    }\n\n    this.setState({\n      costpermile: final\n    });\n  }\n\n  getZIP(zip) {\n    const http = require(\"https\");\n\n    const options = {\n      \"method\": \"GET\",\n      \"hostname\": \"redline-redline-zipcode.p.rapidapi.com\",\n      \"port\": null,\n      \"path\": \"/rest/info.json/\" + this.state.zipcode + \"/degrees\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"73d45d6313mshd16f17ab16d3fe8p1368ecjsn7f132604eddb\",\n        \"x-rapidapi-host\": \"redline-redline-zipcode.p.rapidapi.com\",\n        \"useQueryString\": true\n      }\n    };\n    var self = this;\n    const req = http.request(options, function (res) {\n      const chunks = [];\n      res.on(\"data\", function (chunk) {\n        chunks.push(chunk);\n      });\n      res.on(\"end\", function () {\n        const body = Buffer.concat(chunks);\n        var bodyJSON = JSON.parse(body.toString());\n        console.log(bodyJSON);\n        self.setState({\n          statecode: bodyJSON.state,\n          city: bodyJSON.city\n        });\n      });\n    });\n    req.end();\n  }\n\n  getData(state) {\n    var http = require(\"https\");\n\n    var options = {\n      \"method\": \"GET\",\n      \"hostname\": \"api.collectapi.com\",\n      \"port\": null,\n      \"path\": \"/gasPrice/stateUsaPrice?state=\" + state.toUpperCase(),\n      \"headers\": {\n        \"content-type\": \"application/json\",\n        \"authorization\": \"apikey 6jwMhjlXWz2rcXdhdpLjz6:4X6MQAYjbRiFWwNAxcc5k1\"\n      }\n    };\n    var self = this;\n    var req = http.request(options, function (res) {\n      var chunks = [];\n      res.on(\"data\", function (chunk) {\n        chunks.push(chunk);\n      });\n      res.on(\"end\", function () {\n        var body = Buffer.concat(chunks);\n        var bodyJSON = JSON.parse(body.toString());\n        console.log(bodyJSON);\n        console.log(self.state.typeOfGas);\n        var city = bodyJSON.result.cities.filter(x => x.name.toLowerCase() === self.state.city.toLowerCase());\n\n        if (city.length > 0) {\n          console.log(city[0][self.state.typeOfGas]);\n          self.setState({\n            gallon: city[0][self.state.typeOfGas]\n          });\n        }\n      });\n    });\n    req.end();\n  }\n\n  render() {\n    let allOptions;\n\n    if (this.state.api.length < 5) {\n      fetch('https://vpic.nhtsa.dot.gov/api/vehicles/getallmakes?format=json').then(response => response.json()).then(data => {\n        this.setState({\n          api: data[\"Results\"]\n        });\n      });\n    }\n\n    allOptions = this.state.api.map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n      children: num.Make_Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 50\n    }, this));\n    let allOptions2;\n    let renderCarModel;\n    let renderCarYear;\n\n    if (this.state.carMake.length > 0) {\n      fetch('https://vpic.nhtsa.dot.gov/api/vehicles/GetModelsForMake/' + this.state.carMake + '?format=json').then(response => response.json()).then(data => {\n        this.setState({\n          models: data[\"Results\"]\n        });\n      });\n    }\n\n    var years = [];\n\n    for (var i = 0; i < 100; i++) {\n      years.push(2021 - i);\n    }\n\n    const carYears = years.map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n      children: num\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 45\n    }, this));\n    allOptions2 = this.state.models.map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n      children: num.Model_Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 54\n    }, this));\n\n    if (this.state.carMake.length === 0) {\n      renderCarModel = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 31\n      }, this);\n    } else {\n      renderCarModel = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"what is your model?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: this.handleChange,\n            id: \"carModel\",\n            name: \"carModel\",\n            value: this.state.carModel,\n            children: allOptions2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this);\n    }\n\n    let renderThis;\n\n    if (this.state.isElectric.length === 0) {\n      renderThis = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 27\n      }, this);\n    } else if (this.state.isElectric === \"gas\") {\n      renderThis = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"What gas do you use?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: this.handleChange,\n            id: \"typeOfGas\",\n            type: \"text\",\n            name: \"typeOfGas\",\n            value: this.state.typeOfGas,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              name: \"typeOfGas\",\n              children: \" gasoline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              name: \"typeOfGas\",\n              children: \"midGrade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              name: \"typeOfGas\",\n              children: \" premium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              name: \"typeOfGas\",\n              children: \" diesel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            children: \"Do not answer this question if you are an electric vehicle user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"What is your MPG(Miles Per Gallon)?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"mpg\",\n            onChange: this.handleChange,\n            id: \"mpg\",\n            type: \"number\",\n            name: \"mpg\",\n            value: this.state.mpg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            children: \"Do not answer this question if you are an electric vehicle user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"What is your zip code?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"zip code\",\n            onChange: this.handleChange,\n            id: \"zipcode\",\n            type: \"number\",\n            name: \"zipcode\",\n            value: this.state.zipcode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.handleClick,\n          children: \"submit your zipcode!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: this.state.city.length > 0 ? \"Your city, state is \" + this.state.city + \", \" + this.state.statecode : \"Enter the question above and submit your zip code to move on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 27\n      }, this);\n    } else {\n      renderThis = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"If you drive an electric vehicle, how far can you drive on a full charge in miles?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"fullcharge\",\n            onChange: this.handleChange,\n            id: \"fullcharge\",\n            type: \"number\",\n            name: \"fullcharge\",\n            value: this.state.fullcharge\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            children: \"Do not answer this question if you are a gas vehicle user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"If you drive an electric vehicle, how much does it cost for a full charge?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"fullchargeCost\",\n            onChange: this.handleChange,\n            id: \"fullchargeCost\",\n            type: \"number\",\n            name: \"fullchargeCost\",\n            value: this.state.fullchargeCost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            children: \"Do not answer this question if you are a gas vehicle user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 27\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Cost Per Mile Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Fill out these questions to the best of your abilitiy as they are the basis of calculating your cost per mile. You will be asked about information that you may not know about some of these questions so fill them out to the best of your ability.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"How many miles do you usually drive per week?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              placeholder: \"miles driven\",\n              onChange: this.handleChange,\n              id: \"miles\",\n              type: \"number\",\n              name: \"miles\",\n              value: this.state.miles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Enter the miles you usually drive per week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"How much have you paid for insurance a year?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"insurance per year\",\n              onChange: this.handleChange,\n              id: \"insurance\",\n              type: \"number\",\n              name: \"iPaid\",\n              value: this.state.iPaid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Enter how much insurace you pay each year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"How much have you paid for maitenance a year?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"maitenance a year\",\n              onChange: this.handleChange,\n              id: \"maitenance\",\n              type: \"number\",\n              name: \"mait\",\n              value: this.state.mait\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Enter how much you usually pay for maitenance in a year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"How much do you pay for tolls every month?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"tolls\",\n              onChange: this.handleChange,\n              id: \"tolls\",\n              type: \"number\",\n              name: \"tolls\",\n              value: this.state.tolls\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Enter how much you usually pay for tolls every month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Are you an electric vehicle user or gas car user?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              onChange: this.handleChange,\n              id: \"isElectric\",\n              type: \"text\",\n              name: \"isElectric\",\n              value: this.state.isElectric,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                name: \"isElectric\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                name: \"isElectric\",\n                children: \"gas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                name: \"isElectric\",\n                children: \"electric\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: renderThis\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"How much do you pay for other related car costs per year?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"Other car costs\",\n              onChange: this.handleChange,\n              id: \"subscriptions\",\n              type: \"number\",\n              name: \"subscriptions\",\n              value: this.state.subscriptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"What is your car make\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              placeholder: \"car make\",\n              onChange: this.handleChange,\n              id: \"carMake\",\n              type: \"text\",\n              name: \"carMake\",\n              value: this.state.carMake,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 33\n              }, this), allOptions]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: renderCarModel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"What is your car year?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: this.handleChange,\n              id: \"carYear\",\n              name: \"carYear\",\n              value: this.state.carYear,\n              as: \"select\",\n              children: carYears\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"How much did you pay for your car when you first bought it?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"How much is your car worth now?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Cost per mile: $ \", this.state.costpermile.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The average cost per mile is about $0.79 around the United States. The easiest way to improve your cost per mile is to drive more . The type of car that has the lowest average cost per mile is the small Sedan, and the type of car with the highest cost per mile is the pickup truck. The electric car has a good cost per mile; however, its depreciation costs exceed all other car types.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 21\n        }, this), this.state.costpermile >= 0.79 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your data shows that your cost per mile is greater than or equal to the average cost per mile in the United States.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 55\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your data shows that your cost per mile is below the average cost per mile. You are saving a lot of money as these miles add up over time!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 180\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Calculator, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 617,\n  columnNumber: 5\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/alexhoang/ReactProjects/CostPerMile/src/index.js"],"names":["React","ReactDOM","Button","Jumbotron","Toast","Container","Form","Calculator","Component","constructor","props","state","costpermile","iPaid","gPaid","miles","mait","api","models","originalPrice","finalPrice","tolls","statecode","mpg","subscriptions","gallon","typeOfGas","priceOfGas","city","carType","depreciationValue","fullcharge","fullchargeCost","zipcode","carMake","carModel","isElectric","carYear","handleChange","bind","handleSubmit","handleClick","handleCarMake","depreciate","cartype","depreciation","statemiles","setState","event","name","value","target","console","log","e","getZIP","fetch","then","response","json","data","preventDefault","getData","final","length","parseInt","fullChargeCost","zip","http","require","options","self","req","request","res","chunks","on","chunk","push","body","Buffer","concat","bodyJSON","JSON","parse","toString","end","toUpperCase","result","cities","filter","x","toLowerCase","render","allOptions","map","num","Make_Name","allOptions2","renderCarModel","renderCarYear","years","i","carYears","Model_Name","renderThis","toFixed","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Toast from 'react-bootstrap/Toast';\nimport Container from 'react-bootstrap/Container';\nimport { Form } from 'react-bootstrap';\n\nclass Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            costpermile: 0,\n            iPaid: \"\",\n            gPaid: \"\",\n            miles: \"\",\n            mait: \"\",\n            api: [],\n            models: [],\n            originalPrice: \"\",\n            finalPrice: \"\",\n            tolls: \"\",\n            statecode: \"\",\n            mpg: \"\",\n            subscriptions: \"\",\n            gallon: \"\",\n            typeOfGas: \"gasoline\",\n            priceOfGas: \"\",\n            city: \"\",\n            carType: \"\",\n            depreciationValue: \"\",\n            fullcharge: \"\",\n            fullchargeCost: \"\",\n            zipcode: \"\",\n            carMake: \"\",\n            carModel: \"\",\n            isElectric: \"\",\n            carYear: \"\",\n\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleCarMake = this.handleCarMake.bind(this);\n\n\n    }\n    /*\n     <option name=\"carType\">Small Sedan</option>\n                                    <option name=\"carType\">Medium Sedan</option>\n                                    <option name=\"carType\">Large Sedan</option>\n                                    <option name=\"carType\">Small SUV (FWD)</option>\n                                    <option name=\"carType\">Medium SUV (4WD)</option>\n                                    <option name=\"carType\">Minivan</option>\n                                    <option name=\"carType\">Hybrid Vehicle</option>\n                                    <option name=\"carType\">Electric Vehicle</option>\n    */\n    depreciate(cartype) {\n        let depreciation\n        if (cartype === \"Small Sedan\") {\n            depreciation = 2240 * (this.statemiles / 15000)\n        }\n        else if (cartype === \"Medium Sedan\") {\n            depreciation = 3169 * (this.state.miles / 15000)\n        }\n        else if (cartype === \"Large Sedan\") {\n            depreciation = 4061 * (this.state.miles / 15000)\n        }\n        else if (cartype === \"Small SUV (FWD)\") {\n            depreciation = 3132 * (this.state.miles / 15000)\n        }\n        else if (cartype === \"Medium SUV (4WD)\") {\n            depreciation = 3794 * (this.state.miles / 15000)\n        }\n        else if (cartype === \"Minivan\") {\n            depreciation = 4036 * (this.state.miles / 15000)\n        }\n        else if (cartype === \"Hybrid Vehicle\") {\n            depreciation = 3087 * (this.state.miles / 15000)\n        }\n        else if (cartype === \"Electric Vehicle\") {\n            depreciation = 5250 * (this.state.miles / 15000)\n        }\n        this.setState({\n            depreciationValue: depreciation,\n        })\n    }\n    handleChange(event) {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value,\n        });\n\n        console.log(this.state);\n    }\n    handleClick(e) {\n        this.getZIP(this.state.zipcode);\n        console.log(this.state);\n    }\n    handleCarMake() {\n        fetch('https://vpic.nhtsa.dot.gov/api/vehicles/getallmakes?format=json')\n            .then(response => response.json())\n            .then(data => {\n                this.setState({ api: data[\"Results\"] })\n                console.log(data[\"Results\"])\n                console.log(this.state.api);\n            })\n\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        this.depreciate(this.state.carType);\n        //this.getZIP(this.state.zipcode);\n\n        //wait\n\n        this.getData(this.state.statecode);\n\n        let final;\n\n        if (this.state.mpg.length > 0) {\n            final = (/*parseInt(this.state.depreciationValue) +*/\n                parseInt(this.state.iPaid) +\n                (((this.state.miles * 52) / this.state.mpg) * this.state.gallon) +\n                parseInt(this.state.mait) +\n                (parseInt(this.state.tolls) * 12) +\n                parseInt(this.state.subscriptions))\n                / (parseInt(this.state.miles) * 52);\n        } else {\n            final = (parseInt(this.state.depreciationValue) +\n                parseInt(this.state.iPaid) +\n                ((parseInt(this.state.miles) / parseInt(this.state.fullcharge)) * this.state.fullChargeCost) +\n                parseInt(this.state.mait) +\n                (parseInt(this.state.tolls) * 12) +\n                parseInt(this.state.subscriptions)) /\n                (parseInt(this.state.miles) * 52);\n\n        }\n\n        this.setState(\n            {\n                costpermile: final\n            })\n    }\n    getZIP(zip) {\n        const http = require(\"https\");\n\n        const options = {\n            \"method\": \"GET\",\n            \"hostname\": \"redline-redline-zipcode.p.rapidapi.com\",\n            \"port\": null,\n            \"path\": \"/rest/info.json/\" + this.state.zipcode + \"/degrees\",\n            \"headers\": {\n                \"x-rapidapi-key\": \"73d45d6313mshd16f17ab16d3fe8p1368ecjsn7f132604eddb\",\n                \"x-rapidapi-host\": \"redline-redline-zipcode.p.rapidapi.com\",\n                \"useQueryString\": true\n            }\n        };\n        var self = this;\n        const req = http.request(options, function (res) {\n            const chunks = [];\n\n            res.on(\"data\", function (chunk) {\n                chunks.push(chunk);\n            });\n\n            res.on(\"end\", function () {\n                const body = Buffer.concat(chunks);\n\n                var bodyJSON = JSON.parse(body.toString());\n                console.log(bodyJSON);\n                self.setState({\n                    statecode: bodyJSON.state,\n                    city: bodyJSON.city,\n                })\n            });\n        });\n\n        req.end();\n    }\n\n\n    getData(state) {\n\n\n        var http = require(\"https\");\n\n        var options = {\n            \"method\": \"GET\",\n            \"hostname\": \"api.collectapi.com\",\n            \"port\": null,\n            \"path\": \"/gasPrice/stateUsaPrice?state=\" + state.toUpperCase(),\n            \"headers\": {\n                \"content-type\": \"application/json\",\n                \"authorization\": \"apikey 6jwMhjlXWz2rcXdhdpLjz6:4X6MQAYjbRiFWwNAxcc5k1\"\n            }\n        };\n        var self = this;\n        var req = http.request(options, function (res) {\n            var chunks = [];\n\n            res.on(\"data\", function (chunk) {\n                chunks.push(chunk);\n            });\n\n            res.on(\"end\", function () {\n                var body = Buffer.concat(chunks);\n                var bodyJSON = JSON.parse(body.toString());\n                console.log(bodyJSON);\n                console.log(self.state.typeOfGas);\n                var city = bodyJSON.result.cities.filter((x) => x.name.toLowerCase() === self.state.city.toLowerCase());\n                if (city.length > 0) {\n                    console.log(city[0][self.state.typeOfGas]);\n                    self.setState({\n                        gallon: city[0][self.state.typeOfGas]\n                    })\n                }\n\n            });\n        });\n\n        req.end();\n\n\n    }\n    render() {\n        let allOptions;\n        if (this.state.api.length < 5) {\n            fetch('https://vpic.nhtsa.dot.gov/api/vehicles/getallmakes?format=json')\n                .then(response => response.json())\n                .then(data => {\n                    this.setState({ api: data[\"Results\"] });\n\n                })\n        }\n        allOptions = this.state.api.map((num) => <option>{num.Make_Name}</option>)\n        let allOptions2;\n        let renderCarModel;\n        let renderCarYear;\n\n        if (this.state.carMake.length > 0) {\n            fetch('https://vpic.nhtsa.dot.gov/api/vehicles/GetModelsForMake/' + this.state.carMake + '?format=json')\n                .then(response => response.json())\n                .then(data => {\n                    this.setState({ models: data[\"Results\"] });\n\n                })\n\n        }\n        var years = [];\n        for (var i = 0; i < 100; i++) {\n            years.push(2021 - i);\n        }\n        const carYears = years.map((num) => <option>{num}</option>)\n        allOptions2 = this.state.models.map((num) => <option>{num.Model_Name}</option>)\n        if (this.state.carMake.length === 0) {\n            renderCarModel = (<div></div>);\n        }\n        else {\n            renderCarModel = (\n                <div>\n                    <Form.Group>\n                        <Form.Label>\n                            what is your model?\n                        </Form.Label>\n                        <Form.Control\n                            as=\"select\"\n\n                            onChange={this.handleChange}\n                            id=\"carModel\"\n                            name=\"carModel\"\n                            value={this.state.carModel}\n                        >\n                            {allOptions2}\n                        </Form.Control>\n                    </Form.Group>\n                </div>\n            );\n\n        }\n\n        let renderThis;\n\n        if (this.state.isElectric.length === 0) {\n            renderThis = (<div></div>);\n        }\n        else if (this.state.isElectric === \"gas\") {\n            renderThis = (<div><Form.Group>\n                <Form.Label>\n                    What gas do you use?\n                </Form.Label>\n                <Form.Control as=\"select\"\n                    onChange={this.handleChange}\n                    id=\"typeOfGas\"\n                    type=\"text\"\n                    name=\"typeOfGas\"\n                    value={this.state.typeOfGas}\n                >\n                    <option name=\"typeOfGas\"> gasoline</option>\n                    <option name=\"typeOfGas\">midGrade</option>\n                    <option name=\"typeOfGas\"> premium</option>\n                    <option name=\"typeOfGas\"> diesel</option>\n                </Form.Control>\n                <Form.Text>\n                    Do not answer this question if you are an electric vehicle user\n                </Form.Text>\n            </Form.Group>\n\n\n                <Form.Group>\n                    <Form.Label>\n                        What is your MPG(Miles Per Gallon)?\n                    </Form.Label>\n\n                    <Form.Control\n                        placeholder=\"mpg\"\n                        onChange={this.handleChange}\n                        id=\"mpg\"\n                        type=\"number\"\n                        name=\"mpg\"\n                        value={this.state.mpg}\n                    />\n                    <Form.Text>\n                        Do not answer this question if you are an electric vehicle user\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>\n                        What is your zip code?\n                    </Form.Label>\n\n                    <Form.Control\n                        placeholder=\"zip code\"\n                        onChange={this.handleChange}\n                        id=\"zipcode\"\n                        type=\"number\"\n                        name=\"zipcode\"\n                        value={this.state.zipcode}\n                    />\n                </Form.Group>\n                <Button\n                    variant=\"primary\"\n                    onClick={this.handleClick}\n                >\n                    submit your zipcode!\n                </Button>\n                <br />\n                <label>\n                    {this.state.city.length > 0 ? \"Your city, state is \" + this.state.city + \", \" + this.state.statecode : \"Enter the question above and submit your zip code to move on\"}\n                </label>\n            </div>);\n        } else {\n            renderThis = (<div>\n                <Form.Group>\n                    <Form.Label>\n                        If you drive an electric vehicle, how far can you drive on a full charge in miles?\n                    </Form.Label>\n\n                    <Form.Control\n                        placeholder=\"fullcharge\"\n                        onChange={this.handleChange}\n                        id=\"fullcharge\"\n                        type=\"number\"\n                        name=\"fullcharge\"\n                        value={this.state.fullcharge}\n                    />\n                    <Form.Text>\n                        Do not answer this question if you are a gas vehicle user\n                    </Form.Text>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>\n                        If you drive an electric vehicle, how much does it cost for a full charge?\n                    </Form.Label>\n\n                    <Form.Control\n                        placeholder=\"fullchargeCost\"\n                        onChange={this.handleChange}\n                        id=\"fullchargeCost\"\n                        type=\"number\"\n                        name=\"fullchargeCost\"\n                        value={this.state.fullchargeCost}\n                    />\n                    <Form.Text>\n                        Do not answer this question if you are a gas vehicle user\n                    </Form.Text>\n                </Form.Group>\n            </div>);\n        }\n        return (\n            <Container>\n\n                <Jumbotron>\n                    <h1>\n                        Cost Per Mile Calculator\n\n                    </h1>\n                    <p>\n                        Fill out these questions to the best of your abilitiy as they are the basis of calculating your cost per mile. You will be asked about information that you may not know about some of these questions so fill them out to the best of your ability.\n                    </p>\n                </Jumbotron>\n                <Jumbotron>\n\n\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group>\n\n                            <Form.Label>\n                                How many miles do you usually drive per week?\n                            </Form.Label>\n\n                            <Form.Control type=\"number\"\n                                placeholder=\"miles driven\"\n                                onChange={this.handleChange}\n                                id=\"miles\"\n                                type=\"number\"\n                                name=\"miles\"\n                                value={this.state.miles}\n                            />\n                            <Form.Text className=\"text-muted\">\n                                Enter the miles you usually drive per week\n                            </Form.Text>\n\n\n                        </Form.Group>\n\n\n\n                        <Form.Group>\n\n                            <Form.Label>\n                                How much have you paid for insurance a year?\n                            </Form.Label>\n\n\n                            <Form.Control\n                                placeholder=\"insurance per year\"\n                                onChange={this.handleChange}\n                                id=\"insurance\"\n                                type=\"number\"\n                                name=\"iPaid\"\n                                value={this.state.iPaid}\n                            />\n                            <Form.Text className=\"text-muted\">\n                                Enter how much insurace you pay each year\n                            </Form.Text>\n                        </Form.Group>\n\n\n\n                        <Form.Group>\n\n                            <Form.Label>\n                                How much have you paid for maitenance a year?\n                            </Form.Label>\n\n\n                            <Form.Control\n                                placeholder=\"maitenance a year\"\n                                onChange={this.handleChange}\n                                id=\"maitenance\"\n                                type=\"number\"\n                                name=\"mait\"\n                                value={this.state.mait}\n                            />\n                            <Form.Text className=\"text-muted\">\n                                Enter how much you usually pay for maitenance in a year\n                            </Form.Text>\n                        </Form.Group>\n\n\n                        <Form.Group>\n                            <Form.Label>\n                                How much do you pay for tolls every month?\n                            </Form.Label>\n\n\n                            <Form.Control\n                                placeholder=\"tolls\"\n                                onChange={this.handleChange}\n                                id=\"tolls\"\n                                type=\"number\"\n                                name=\"tolls\"\n                                value={this.state.tolls}\n                            />\n                            <Form.Text className=\"text-muted\">\n                                Enter how much you usually pay for tolls every month\n                            </Form.Text>\n                        </Form.Group>\n\n\n\n\n\n                        <Form.Group>\n\n                            <Form.Label>\n                                Are you an electric vehicle user or gas car user?\n                            </Form.Label>\n\n\n                            <Form.Control as=\"select\"\n\n                                onChange={this.handleChange}\n                                id=\"isElectric\"\n                                type=\"text\"\n                                name=\"isElectric\"\n                                value={this.state.isElectric}\n                            >\n                                <option name=\"isElectric\"></option>\n                                <option name=\"isElectric\">gas</option>\n                                <option name=\"isElectric\">electric</option>\n\n                            </Form.Control>\n\n                            <div>\n                                {renderThis}\n                            </div>\n\n                        </Form.Group>\n\n\n                        <br />\n                        <br />\n\n                        <Form.Group>\n                            <Form.Label>\n                                How much do you pay for other related car costs per year?\n                            </Form.Label>\n                            <Form.Control\n                                placeholder=\"Other car costs\"\n                                onChange={this.handleChange}\n                                id=\"subscriptions\"\n                                type=\"number\"\n                                name=\"subscriptions\"\n                                value={this.state.subscriptions}\n                            />\n\n\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>\n                                What is your car make\n                            </Form.Label>\n                            <Form.Control as=\"select\"\n                                placeholder=\"car make\"\n                                onChange={this.handleChange}\n                                id=\"carMake\"\n                                type=\"text\"\n                                name=\"carMake\"\n                                value={this.state.carMake}\n                            >\n                                <option></option>\n                                {allOptions}\n\n                            </Form.Control>\n\n                            <div>\n                                {renderCarModel}\n                            </div>\n\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>\n                                What is your car year?\n                            </Form.Label>\n                            <Form.Control\n                                onChange = {this.handleChange}\n                                id = \"carYear\"\n                                name = \"carYear\"\n                                value = {this.state.carYear}\n                                as=\"select\">\n                                {carYears}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>\n                                How much did you pay for your car when you first bought it?\n                            </Form.Label>\n                            <Form.Control\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>\n                                How much is your car worth now?\n                            </Form.Label>\n                            <Form.Control\n                            />\n                        </Form.Group>\n\n\n                        <input type=\"submit\"\n                        />\n                    </Form>\n\n                    <br />\n\n                    <h2>\n                        Cost per mile: $ {this.state.costpermile.toFixed(2)}\n                    </h2>\n                    <p>\n                        The average cost per mile is about $0.79 around the United States. The easiest way to improve your cost per mile is to drive more . The type of car that has the lowest average cost per mile is the small Sedan, and the type of car with the highest cost per mile is the pickup truck. The electric car has a good cost per mile; however, its depreciation costs exceed all other car types.\n                    </p>\n                    {this.state.costpermile >= 0.79 ? <p>Your data shows that your cost per mile is greater than or equal to the average cost per mile in the United States.</p> : <p>Your data shows that your cost per mile is below the average cost per mile. You are saving a lot of money as these miles add up over time!</p>}\n\n                </Jumbotron>\n            </Container>\n        );\n    }\n}\n\nReactDOM.render(\n    <Calculator />,\n    document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}